================================================================================
                             ___________    ____________
    __________________  ____ \  _   \   \   \        \  \_
    \    __    \      \/    \/  7  _/   /   /  __    /    \_
    /     7    /            /   _   \  /___/    7   /  _    \_
   /_     ____/_    /\_/   /    7   /     /_       /   7      \
     \________/ \__/  /___/________/\______/\_____/___________/
                                            [asmegir.hopto.org]
             e       m       B       L       O       D

================================================================================

Content:
=========
	License
	Compiling
	Programming


License
==========
The License for simpleBLOD is found in the file COPYING.


Introduction
===============
BLOD is a bootloader for AVR32 devices. Bootloading is done from SD(HC) memory
card.

Boot parameters
=================
If a file named bootparm.txt is present on the SD card root directory the
parameters in this file will be read and used during boot. Otherwise the
bootloader will try to load autorun.bin with default parameters.
If nothing is available to load the bootloader complains and give up.

Possible boot parameters:
banner - A banner can optinally be displayed. The file given here contain the ASCII-art.
baudrate - The baudrate for the serial port.
bootfile - The filename to load
bootdelay - If, for some reason, a pause between loading the bootfile and start running the loaded code is wanted, a value in seconds can be given.
loadaddr - The bootfile will be loaded to this address.
bootaddr - When the bootloader is done, execution continue at this address.
fcpu - The frequency of the CPU that the bootloader will turn over to the loaded program.
fpba - The frequency of the PBA bus that the bootloader will turn over to the loaded program.


Compiling
==========
BLOD will compile by typing:
	make
in the directory containing the Makefile.
The default compilation is for Mizar32
Compiling for EVK1100 is done by typing:
	make BOARD=EVK1100

Programming EVK1100/Mizar32
===========================
Typing:
	make program
will program the binary to the chip.



